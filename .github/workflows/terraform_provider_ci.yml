# Terraform Provider testing workflow.
name: CI

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Upeercase app name'
        type: string
        required: true
      url:
        description: 'App URL'
        type: string
        required: true

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

# Default values to simplify job configurations below.
env:
  API_KEY: ${{ github.run_id }}${{ github.sha }}${{ github.run_attempt }}

jobs:
  # Lint
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: v1.54.0

  # Ensure project builds before running testing matrix.
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - run: go mod download
      - name: build
        run: go build -v .

  # Run acceptance tests in a matrix with Terraform CLI versions.
  test:
    name: Acceptance (â’¶${{ matrix.terraform }})
    needs: [lint, build]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # list of Terraform supported versions.
        terraform:
          - '1.4.*'
          - '1.5.*'
          - '1.6.*'
    steps:
      - uses: actions/checkout@v4
      - name: create config file for both *arr and *err apps
        run: >
          echo "<Config><ApiKey>${{ env.API_KEY }}</ApiKey></Config>" > ${{ github.workspace }}/.github/provider/config.xml &&
          echo "{\"main\":{\"apiKey\":\"${{ env.API_KEY }}\"}}" > ${{ github.workspace }}/.github/provider/settings.json
      - name: config rights
        run: >
          sudo chown 1000:1000 ${{ github.workspace }}/.github/provider/config.xml &&
          sudo chmod +x ${{ github.workspace }}/.github/provider/test.sh
      - name: run provider
        run: docker-compose -f ${{ github.workspace }}/.github/provider/docker-compose.yml up -d
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: Set provider port
        run: echo "APP_PORT=$(docker port $(echo ${{ inputs.app-name }} | awk '{print tolower($0)}') | awk -F'/' 'NR==1{print $1; exit}')" >> $GITHUB_ENV
      - name: run tests
        run: go test -timeout 30m -race -coverprofile=coverage.out -covermode=atomic -v -cover ./...
        env:
          ${{ inputs.app-name }}_URL: "http://127.0.0.1:${{ env.APP_PORT }}"
          ${{ inputs.app-name }}_API_KEY: ${{ env.API_KEY }}
          TF_ACC: "1"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
