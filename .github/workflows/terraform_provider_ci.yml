# Terraform Provider testing workflow.
name: CI

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Upeercase app name'
        type: string
        required: true
      url:
        description: 'App URL'
        type: string
        required: true

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

# Default values to simplify job configurations below.
env:
  GO_VERSION: '1.19'

jobs:
  # Lint
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: lint
        uses: golangci/golangci-lint-action@v3.6.0
        with:
          version: v1.53.3

  # Ensure project builds before running testing matrix.
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - run: go mod download
      - name: build
        run: go build -v .

  # Run acceptance tests in a matrix with Terraform CLI versions.
  test:
    name: Acceptance (â’¶${{ matrix.terraform }})
    needs: [lint, build]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list of Terraform supported versions.
        terraform:
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
    steps:
      - uses: actions/checkout@v3
      - name: create config file
        run: echo "<Config><ApiKey>${{ secrets.APP_API_KEY }}</ApiKey></Config>" > ${{ github.workspace }}/.github/provider/config.xml
      - name: config rights
        run: >
          sudo chown 1000:1000 ${{ github.workspace }}/.github/provider/config.xml &&
          sudo chmod +x ${{ github.workspace }}/.github/provider/test.sh
      - name: run provider
        run: docker-compose -f ${{ github.workspace }}/.github/provider/docker-compose.yml up -d
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: run tests
        run: go test -timeout 30m -race -coverprofile=coverage.out -covermode=atomic -v -cover ./...
        env:
          ${{ inputs.app-name }}_URL: ${{ inputs.url }}
          ${{ inputs.app-name }}_API_KEY: ${{ secrets.APP_API_KEY }}
          TF_ACC: "1"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
