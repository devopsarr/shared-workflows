# Ansible collection testing workflow
name: CI

on:
  workflow_call:
    inputs:
      namespace:
        description: 'Collection namespace'
        type: string
        required: true
      collection-name:
        description: 'Collection name'
        type: string
        required: true

jobs:
  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
        # List of supported ansible
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - devel
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Install python dependencies
        run: pip install --upgrade git+https://github.com/devopsarr/${{ inputs.collection-name }}-py.git --upgrade-strategy eager --disable-pip-version-check

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required
      # and all python versions ansible supports.
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --coverage --exclude .github/
        working-directory: ./ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      # See the reports at https://codecov.io/gh/devopsarr/ansible-collection-${{ inputs.collection-name }}
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

### TO BE ADDED AS NEEDED
# Unit tests (OPTIONAL)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_units.html

#   units:
#     runs-on: ubuntu-latest
#     name: Units (Ⓐ${{ matrix.ansible }})
#     strategy:
#       # As soon as the first unit test fails, cancel the others to free up the CI queue
#       fail-fast: true
#       matrix:
#         ansible:
#           # - stable-2.9 # Only if your collection supports Ansible 2.9
#           - stable-2.10
#           - stable-2.11
#           - stable-2.12
#           - devel

#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3
#         with:
#           path: ansible_collections/${{env.devopsarr}}/${{env.${{ inputs.collection-name }}}}

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           # it is just required to run that once as "ansible-test units" in the docker image
#           # will run on all python versions it supports.
#           python-version: '3.10'

#       - name: Install ansible-base (${{ matrix.ansible }})
#         run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

#       # OPTIONAL If your unit test requires Python libraries from other collections
#       # Install them like this
#       - name: Install collection dependencies
#         run: ansible-galaxy collection install ansible.netcommon ansible.utils -p .

#       # Run the unit tests
#       - name: Run unit test
#         run: ansible-test units -v --color --docker --coverage
#         working-directory: ./ansible_collections/${{env.devopsarr}}/${{env.${{ inputs.collection-name }}}}

#       # ansible-test support producing code coverage date
#       - name: Generate coverage report
#         run: ansible-test coverage xml -v --requirements --group-by command --group-by version
#         working-directory: ./ansible_collections/${{env.devopsarr}}/${{env.${{ inputs.collection-name }}}}

#       # See the reports at https://codecov.io/gh/devopsarr/ansible-collection-${{ inputs.collection-name }}
#       - uses: codecov/codecov-action@v3
#         with:
#           fail_ci_if_error: false

###
# Integration tests
  integration:
    runs-on: ubuntu-latest
    name: Integration (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - devel
        python:
          - '3.9'
          - '3.10'
          - '3.11'
        # exclude not supported combinations
        exclude:
          - ansible: stable-2.12
            python: '3.11'
          - ansible: stable-2.13
            python: '3.11'

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      - name: create config file
        run: >
          echo "<Config><ApiKey>${{ secrets.APP_API_KEY }}</ApiKey></Config>" > ${{ github.workspace }}/ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}/.github/provider/config.xml
      - name: config rights
        run: >
          sudo chown 1000:1000 ${{ github.workspace }}/ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}/.github/provider/config.xml &&
          sudo chmod +x ${{ github.workspace }}/ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}/.github/provider/test.sh

      - name: run provider
        run: docker-compose -f ${{ github.workspace }}/ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}/.github/provider/docker-compose.yml up -d

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # Install dependencies
      # - name: Install collection dependencies
      #   run: ansible-galaxy collection install ansible.netcommon -p .
      - name: Install python dependencies
        run: pip install --upgrade git+https://github.com/devopsarr/${{ inputs.collection-name }}-py.git --upgrade-strategy eager --disable-pip-version-check

      - name: Set API key before integration test
        run: >
          echo -e "\n${{ inputs.collection-name }}_api_key: ${{ secrets.APP_API_KEY }}" >> ./tests/integration/integration_config.yml
        working-directory: ./ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      # Run the integration tests
      - name: Run integration test
        run: ansible-test integration -v --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --requirements
        working-directory: ./ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{ inputs.namespace }}/${{ inputs.collection-name }}

      # See the reports at https://codecov.io/gh/devopsarr/ansible-collection-${{ inputs.collection-name }}
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
