# Golang module release management
name: Release Management

on:
  workflow_call:

env:
  # Go language version to use.
  GO_VERSION: '1.19'

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release_please.outputs.release_created }}
    steps:
      - name: DevOpsArrBOT token
        id: DevOpsArrBOT
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: '305652'
          private_key: ${{ secrets.DEVOPSARRBOT_PRIVATE_KEY }}
      - name: app name
        id: app-name
        run: |
          app=${{ github.repository }} &&\
          echo "name=$(echo $app | sed -e 's%.*/%%g' -e 's%-.*%%g')" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          # Allow access to older tag information.
          fetch-depth: 0
          token: ${{ steps.DevOpsArrBOT.outputs.token }}
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Release Please
        id: release_please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: go
          token: ${{ steps.DevOpsArrBOT.outputs.token }}
          extra-files: |
            README.md
            ${{ steps.app-name.outputs.name }}/configuration.go

  gorelease:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Allow access to older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4.2.0
        with:
          args: release --rm-dist
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
